{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/React Udacity/React-Udacity-myreads-Project/starter/src/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  onHandleSearch\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [books, setBooks] = useState([]); // const showingBooks =\n  // \tquery === \"\"\n  // \t\t? books\n  // \t\t: setBooks(\n  // \t\t\t\tbooks.filter((book) =>\n  // \t\t\t\t\tbook.title.toLowerCase().includes(query.toLowerCase())\n  // \t\t\t\t)\n  // \t\t  );\n\n  const handleQuery = event => {\n    setQuery(event.target.value);\n\n    if (event.target.value !== \"\") {\n      const queryBooks = async () => {\n        const res = await BooksAPI.search(event.target.value, 20);\n        setBooks(res.filter(book => book.title.toLowerCase().includes(event.target.value.toLowerCase())));\n      };\n\n      queryBooks();\n    } else {\n      console.log(\"thsi is else\");\n      setBooks([]);\n      console.log(books);\n    }\n  }; // useEffect(() => {\n  // \tconst books = async () => {\n  // \t\tconst res = await BooksAPI.search(\"a\", 20);\n  // \t\tsetBooks(res);\n  // \t};\n  // \tbooks();\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: () => onHandleSearch(),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleQuery,\n          value: query,\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [\"starts here\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: book.title\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SearchBooks, \"AFTipISzaEfZPaTyVfhpect2zrI=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/home/talha/Documents/React Udacity/React-Udacity-myreads-Project/starter/src/SearchBooks.js"],"names":["useState","useEffect","BooksAPI","SearchBooks","onHandleSearch","query","setQuery","books","setBooks","handleQuery","event","target","value","queryBooks","res","search","filter","book","title","toLowerCase","includes","console","log","map","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAF2C,CAI3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,WAAW,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;;AACA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC9B,YAAMC,UAAU,GAAG,YAAY;AAC9B,cAAMC,GAAG,GAAG,MAAMZ,QAAQ,CAACa,MAAT,CAAgBL,KAAK,CAACC,MAAN,CAAaC,KAA7B,EAAoC,EAApC,CAAlB;AACAJ,QAAAA,QAAQ,CACPM,GAAG,CAACE,MAAJ,CAAYC,IAAD,IACVA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCV,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBO,WAAnB,EAAlC,CADD,CADO,CAAR;AAKA,OAPD;;AAQAN,MAAAA,UAAU;AACV,KAVD,MAUO;AACGQ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAd,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACH;AACP,GAjBD,CAb2C,CAgC3C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BAEC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,MAAMH,cAAc,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACC;AACC,UAAA,QAAQ,EAAEK,WADX;AAEC,UAAA,KAAK,EAAEJ,KAFR;AAGC,UAAA,IAAI,EAAC,MAHN;AAIC,UAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAeC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6CAEC;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACEE,KAAK,CAACgB,GAAN,CAAWN,IAAD,iBACV;AAAA,oBAAmBA,IAAI,CAACC;AAAxB,WAASD,IAAI,CAACO,EAAd;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CAlED;;GAAMrB,W;;KAAAA,W;AAoEN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst SearchBooks = ({ onHandleSearch }) => {\n\tconst [query, setQuery] = useState(\"\");\n\tconst [books, setBooks] = useState([]);\n\n\t// const showingBooks =\n\t// \tquery === \"\"\n\t// \t\t? books\n\t// \t\t: setBooks(\n\t// \t\t\t\tbooks.filter((book) =>\n\t// \t\t\t\t\tbook.title.toLowerCase().includes(query.toLowerCase())\n\t// \t\t\t\t)\n\t// \t\t  );\n\n\tconst handleQuery = (event) => {\n\t\tsetQuery(event.target.value);\n\t\tif (event.target.value !== \"\") {\n\t\t\tconst queryBooks = async () => {\n\t\t\t\tconst res = await BooksAPI.search(event.target.value, 20);\n\t\t\t\tsetBooks(\n\t\t\t\t\tres.filter((book) =>\n\t\t\t\t\t\tbook.title.toLowerCase().includes(event.target.value.toLowerCase())\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t};\n\t\t\tqueryBooks();\n\t\t} else {\n            console.log(\"thsi is else\")\n            setBooks([])\n            console.log(books)\n        }\n\t};\n\n\t// useEffect(() => {\n\t// \tconst books = async () => {\n\t// \t\tconst res = await BooksAPI.search(\"a\", 20);\n\t// \t\tsetBooks(res);\n\t// \t};\n\t// \tbooks();\n\t// }, []);\n\n\treturn (\n\t\t<div className=\"search-books\">\n            {/* {console.log(books)} */}\n\t\t\t<div className=\"search-books-bar\">\n\t\t\t\t<a className=\"close-search\" onClick={() => onHandleSearch()}>\n\t\t\t\t\tClose\n\t\t\t\t</a>\n\t\t\t\t<div className=\"search-books-input-wrapper\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={handleQuery}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search by title, author, or ISBN\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"search-books-results\">\n\t\t\t\tstarts here\n\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t{books.map((book) => (\n\t\t\t\t\t\t<li key={book.id}>{book.title}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}
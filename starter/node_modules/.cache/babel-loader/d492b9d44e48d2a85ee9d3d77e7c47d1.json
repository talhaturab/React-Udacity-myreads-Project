{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/React Udacity/React-Udacity-myreads-Project/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport AddBook from \"./AddBook\";\nimport SearchBooks from \"./SearchBooks\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport ShowBooks from \"./ShowBooks\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n\n  const updateSearchPage = () => {\n    setShowSearchpage(!showSearchPage);\n  };\n\n  const updateCategory = (book, shelf) => {\n    const update = async () => {\n      await BooksAPI.update(book, shelf);\n      const updatedBooks = await BooksAPI.getAll();\n      setBooks(updatedBooks);\n      console.log(\"book updated\");\n    };\n\n    update();\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ShowBooks, {\n        books: books,\n        onUpdateCategory: updateCategory,\n        updateSearchPage: updateSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      page: \"/searchPage\",\n      element: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this) // <div className=\"app\">\n  // \t{showSearchPage ? (\n  // \t\t<SearchBooks onHandleSearch={updateSearchPage} onUpdateCategory={updateCategory} shelfBooks={books}/>\n  // \t) : (\n  // \t\t<div className=\"list-books\">\n  // \t\t\t<div className=\"list-books-title\">\n  // \t\t\t\t<h1>MyReads</h1>\n  // \t\t\t</div>\n  // \t\t\t<div className=\"list-books-content\">\n  // \t\t\t\t<div>\n  //                     <ShowBooks books={books} onUpdateCategory={updateCategory}/>\n  // \t\t\t\t</div>\n  // \t\t\t</div>\n  // \t\t\t<AddBook\n  // \t\t\t\thandleSearchPage={updateSearchPage}\n  // \t\t\t\tbooks={books}\n  // \t\t\t/>\n  // \t\t</div>\n  // \t)}\n  // </div>\n  ;\n}\n\n_s(App, \"nbPgxAidDx/FwmiTUHzCwYxu9wY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/talha/Documents/React Udacity/React-Udacity-myreads-Project/starter/src/App.js"],"names":["useState","useEffect","AddBook","SearchBooks","BooksAPI","ShowBooks","Route","Routes","App","showSearchPage","setShowSearchpage","books","setBooks","updateSearchPage","updateCategory","book","shelf","update","updatedBooks","getAll","console","log","getBooks","res"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,gBAAgB,GAAG,MAAM;AAC9BH,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACA,GAFD;;AAIA,QAAMK,cAAc,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,UAAMC,MAAM,GAAG,YAAY;AAC1B,YAAMb,QAAQ,CAACa,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,CAAN;AACA,YAAME,YAAY,GAAG,MAAMd,QAAQ,CAACe,MAAT,EAA3B;AACAP,MAAAA,QAAQ,CAACM,YAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,KALD;;AAOAJ,IAAAA,MAAM;AACN,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMqB,QAAQ,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMnB,QAAQ,CAACe,MAAT,EAAlB;AACAP,MAAAA,QAAQ,CAACW,GAAD,CAAR;AACA,KAHD;;AAKAD,IAAAA,QAAQ;AACR,GAPQ,EAON,EAPM,CAAT;AASA,sBACC,QAAC,MAAD;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAC,GAFN;AAGC,MAAA,OAAO,eACN,QAAC,SAAD;AACC,QAAA,KAAK,EAAEX,KADR;AAEC,QAAA,gBAAgB,EAAEG,cAFnB;AAGmB,QAAA,gBAAgB,EAAED;AAHrC;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADD,eAYU,QAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,OAAO;AAHX;AAAA;AAAA;AAAA;AAAA,YAZV;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAoBC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCD;AAyCA;;GArEQL,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport AddBook from \"./AddBook\";\nimport SearchBooks from \"./SearchBooks\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport ShowBooks from \"./ShowBooks\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n\tconst [showSearchPage, setShowSearchpage] = useState(false);\n\tconst [books, setBooks] = useState([]);\n\n\tconst updateSearchPage = () => {\n\t\tsetShowSearchpage(!showSearchPage);\n\t};\n\n\tconst updateCategory = (book, shelf) => {\n\t\tconst update = async () => {\n\t\t\tawait BooksAPI.update(book, shelf);\n\t\t\tconst updatedBooks = await BooksAPI.getAll();\n\t\t\tsetBooks(updatedBooks);\n\t\t\tconsole.log(\"book updated\");\n\t\t};\n\n\t\tupdate();\n\t};\n\n\tuseEffect(() => {\n\t\tconst getBooks = async () => {\n\t\t\tconst res = await BooksAPI.getAll();\n\t\t\tsetBooks(res);\n\t\t};\n\n\t\tgetBooks();\n\t}, []);\n\n\treturn (\n\t\t<Routes>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/\"\n\t\t\t\telement={\n\t\t\t\t\t<ShowBooks\n\t\t\t\t\t\tbooks={books}\n\t\t\t\t\t\tonUpdateCategory={updateCategory}\n                        updateSearchPage={updateSearchPage}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t/>\n            <Route \n                exact\n                page=\"/searchPage\"\n                element\n            />\n\t\t</Routes>\n\n\t\t// <div className=\"app\">\n\t\t// \t{showSearchPage ? (\n\t\t// \t\t<SearchBooks onHandleSearch={updateSearchPage} onUpdateCategory={updateCategory} shelfBooks={books}/>\n\t\t// \t) : (\n\t\t// \t\t<div className=\"list-books\">\n\t\t// \t\t\t<div className=\"list-books-title\">\n\t\t// \t\t\t\t<h1>MyReads</h1>\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div className=\"list-books-content\">\n\t\t// \t\t\t\t<div>\n\t\t//                     <ShowBooks books={books} onUpdateCategory={updateCategory}/>\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<AddBook\n\t\t// \t\t\t\thandleSearchPage={updateSearchPage}\n\t\t// \t\t\t\tbooks={books}\n\t\t// \t\t\t/>\n\t\t// \t\t</div>\n\t\t// \t)}\n\t\t// </div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}